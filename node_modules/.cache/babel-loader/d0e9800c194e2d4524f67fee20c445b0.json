{"ast":null,"code":"/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport '../_version.js'; // Name of the search parameter used to store revision info.\n\nvar REVISION_SEARCH_PARAM = '__WB_REVISION__';\n/**\n * Converts a manifest entry into a versioned URL suitable for precaching.\n *\n * @param {Object|string} entry\n * @return {string} A URL with versioning info.\n *\n * @private\n * @memberof workbox-precaching\n */\n\nexport function createCacheKey(entry) {\n  if (!entry) {\n    throw new WorkboxError('add-to-cache-list-unexpected-type', {\n      entry: entry\n    });\n  } // If a precache manifest entry is a string, it's assumed to be a versioned\n  // URL, like '/app.abcd1234.js'. Return as-is.\n\n\n  if (typeof entry === 'string') {\n    var urlObject = new URL(entry, location.href);\n    return {\n      cacheKey: urlObject.href,\n      url: urlObject.href\n    };\n  }\n\n  var revision = entry.revision,\n      url = entry.url;\n\n  if (!url) {\n    throw new WorkboxError('add-to-cache-list-unexpected-type', {\n      entry: entry\n    });\n  } // If there's just a URL and no revision, then it's also assumed to be a\n  // versioned URL.\n\n\n  if (!revision) {\n    var urlObject = new URL(url, location.href);\n    return {\n      cacheKey: urlObject.href,\n      url: urlObject.href\n    };\n  } // Otherwise, construct a properly versioned URL using the custom Workbox\n  // search parameter along with the revision info.\n\n\n  var cacheKeyURL = new URL(url, location.href);\n  var originalURL = new URL(url, location.href);\n  cacheKeyURL.searchParams.set(REVISION_SEARCH_PARAM, revision);\n  return {\n    cacheKey: cacheKeyURL.href,\n    url: originalURL.href\n  };\n}","map":{"version":3,"names":["WorkboxError","REVISION_SEARCH_PARAM","createCacheKey","entry","urlObject","URL","location","href","cacheKey","url","revision","cacheKeyURL","originalURL","searchParams","set"],"sources":["/Users/faratim/Documents/GitHub/meet-app/meet/node_modules/workbox-precaching/utils/createCacheKey.js"],"sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport '../_version.js';\n// Name of the search parameter used to store revision info.\nconst REVISION_SEARCH_PARAM = '__WB_REVISION__';\n/**\n * Converts a manifest entry into a versioned URL suitable for precaching.\n *\n * @param {Object|string} entry\n * @return {string} A URL with versioning info.\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function createCacheKey(entry) {\n    if (!entry) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If a precache manifest entry is a string, it's assumed to be a versioned\n    // URL, like '/app.abcd1234.js'. Return as-is.\n    if (typeof entry === 'string') {\n        const urlObject = new URL(entry, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    const { revision, url } = entry;\n    if (!url) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If there's just a URL and no revision, then it's also assumed to be a\n    // versioned URL.\n    if (!revision) {\n        const urlObject = new URL(url, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    // Otherwise, construct a properly versioned URL using the custom Workbox\n    // search parameter along with the revision info.\n    const cacheKeyURL = new URL(url, location.href);\n    const originalURL = new URL(url, location.href);\n    cacheKeyURL.searchParams.set(REVISION_SEARCH_PARAM, revision);\n    return {\n        cacheKey: cacheKeyURL.href,\n        url: originalURL.href,\n    };\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAT,QAA6B,uCAA7B;AACA,OAAO,gBAAP,C,CACA;;AACA,IAAMC,qBAAqB,GAAG,iBAA9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;EAClC,IAAI,CAACA,KAAL,EAAY;IACR,MAAM,IAAIH,YAAJ,CAAiB,mCAAjB,EAAsD;MAAEG,KAAK,EAALA;IAAF,CAAtD,CAAN;EACH,CAHiC,CAIlC;EACA;;;EACA,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;IAC3B,IAAMC,SAAS,GAAG,IAAIC,GAAJ,CAAQF,KAAR,EAAeG,QAAQ,CAACC,IAAxB,CAAlB;IACA,OAAO;MACHC,QAAQ,EAAEJ,SAAS,CAACG,IADjB;MAEHE,GAAG,EAAEL,SAAS,CAACG;IAFZ,CAAP;EAIH;;EACD,IAAQG,QAAR,GAA0BP,KAA1B,CAAQO,QAAR;EAAA,IAAkBD,GAAlB,GAA0BN,KAA1B,CAAkBM,GAAlB;;EACA,IAAI,CAACA,GAAL,EAAU;IACN,MAAM,IAAIT,YAAJ,CAAiB,mCAAjB,EAAsD;MAAEG,KAAK,EAALA;IAAF,CAAtD,CAAN;EACH,CAhBiC,CAiBlC;EACA;;;EACA,IAAI,CAACO,QAAL,EAAe;IACX,IAAMN,SAAS,GAAG,IAAIC,GAAJ,CAAQI,GAAR,EAAaH,QAAQ,CAACC,IAAtB,CAAlB;IACA,OAAO;MACHC,QAAQ,EAAEJ,SAAS,CAACG,IADjB;MAEHE,GAAG,EAAEL,SAAS,CAACG;IAFZ,CAAP;EAIH,CAzBiC,CA0BlC;EACA;;;EACA,IAAMI,WAAW,GAAG,IAAIN,GAAJ,CAAQI,GAAR,EAAaH,QAAQ,CAACC,IAAtB,CAApB;EACA,IAAMK,WAAW,GAAG,IAAIP,GAAJ,CAAQI,GAAR,EAAaH,QAAQ,CAACC,IAAtB,CAApB;EACAI,WAAW,CAACE,YAAZ,CAAyBC,GAAzB,CAA6Bb,qBAA7B,EAAoDS,QAApD;EACA,OAAO;IACHF,QAAQ,EAAEG,WAAW,CAACJ,IADnB;IAEHE,GAAG,EAAEG,WAAW,CAACL;EAFd,CAAP;AAIH"},"metadata":{},"sourceType":"module"}