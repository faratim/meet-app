{"ast":null,"code":"/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\n\nvar fallback = function fallback(code) {\n  var msg = code;\n\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  if (args.length > 0) {\n    msg += \" :: \".concat(JSON.stringify(args));\n  }\n\n  return msg;\n};\n\nvar generatorFunction = function generatorFunction(code) {\n  var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var message = messages[code];\n\n  if (!message) {\n    throw new Error(\"Unable to find message for code '\".concat(code, \"'.\"));\n  }\n\n  return message(details);\n};\n\nexport var messageGenerator = process.env.NODE_ENV === 'production' ? fallback : generatorFunction;","map":{"version":3,"names":["messages","fallback","code","msg","args","length","JSON","stringify","generatorFunction","details","message","Error","messageGenerator","process","env","NODE_ENV"],"sources":["/Users/faratim/Documents/GitHub/meet-app/meet/node_modules/workbox-core/models/messages/messageGenerator.js"],"sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = process.env.NODE_ENV === 'production' ? fallback : generatorFunction;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAT,QAAyB,eAAzB;AACA,OAAO,mBAAP;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAmB;EAChC,IAAIC,GAAG,GAAGD,IAAV;;EADgC,kCAATE,IAAS;IAATA,IAAS;EAAA;;EAEhC,IAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;IACjBF,GAAG,kBAAWG,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAX,CAAH;EACH;;EACD,OAAOD,GAAP;AACH,CAND;;AAOA,IAAMK,iBAAiB,GAAG,SAApBA,iBAAoB,CAACN,IAAD,EAAwB;EAAA,IAAjBO,OAAiB,uEAAP,EAAO;EAC9C,IAAMC,OAAO,GAAGV,QAAQ,CAACE,IAAD,CAAxB;;EACA,IAAI,CAACQ,OAAL,EAAc;IACV,MAAM,IAAIC,KAAJ,4CAA8CT,IAA9C,QAAN;EACH;;EACD,OAAOQ,OAAO,CAACD,OAAD,CAAd;AACH,CAND;;AAOA,OAAO,IAAMG,gBAAgB,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCd,QAAxC,GAAmDO,iBAA5E"},"metadata":{},"sourceType":"module"}