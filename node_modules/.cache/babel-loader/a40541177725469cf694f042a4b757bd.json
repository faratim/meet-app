{"ast":null,"code":"/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from './_private/assert.js';\nimport { cacheNames } from './_private/cacheNames.js';\nimport { WorkboxError } from './_private/WorkboxError.js';\nimport './_version.js';\n/**\n * Modifies the default cache names used by the Workbox packages.\n * Cache names are generated as `<prefix>-<Cache Name>-<suffix>`.\n *\n * @param {Object} details\n * @param {Object} [details.prefix] The string to add to the beginning of\n *     the precache and runtime cache names.\n * @param {Object} [details.suffix] The string to add to the end of\n *     the precache and runtime cache names.\n * @param {Object} [details.precache] The cache name to use for precache\n *     caching.\n * @param {Object} [details.runtime] The cache name to use for runtime caching.\n * @param {Object} [details.googleAnalytics] The cache name to use for\n *     `workbox-google-analytics` caching.\n *\n * @memberof workbox-core\n */\n\nfunction setCacheNameDetails(details) {\n  if (process.env.NODE_ENV !== 'production') {\n    Object.keys(details).forEach(function (key) {\n      assert.isType(details[key], 'string', {\n        moduleName: 'workbox-core',\n        funcName: 'setCacheNameDetails',\n        paramName: \"details.\".concat(key)\n      });\n    });\n\n    if ('precache' in details && details['precache'].length === 0) {\n      throw new WorkboxError('invalid-cache-name', {\n        cacheNameId: 'precache',\n        value: details['precache']\n      });\n    }\n\n    if ('runtime' in details && details['runtime'].length === 0) {\n      throw new WorkboxError('invalid-cache-name', {\n        cacheNameId: 'runtime',\n        value: details['runtime']\n      });\n    }\n\n    if ('googleAnalytics' in details && details['googleAnalytics'].length === 0) {\n      throw new WorkboxError('invalid-cache-name', {\n        cacheNameId: 'googleAnalytics',\n        value: details['googleAnalytics']\n      });\n    }\n  }\n\n  cacheNames.updateDetails(details);\n}\n\nexport { setCacheNameDetails };","map":{"version":3,"names":["assert","cacheNames","WorkboxError","setCacheNameDetails","details","process","env","NODE_ENV","Object","keys","forEach","key","isType","moduleName","funcName","paramName","length","cacheNameId","value","updateDetails"],"sources":["/Users/faratim/Documents/GitHub/meet-app/meet/node_modules/workbox-core/setCacheNameDetails.js"],"sourcesContent":["/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from './_private/assert.js';\nimport { cacheNames } from './_private/cacheNames.js';\nimport { WorkboxError } from './_private/WorkboxError.js';\nimport './_version.js';\n/**\n * Modifies the default cache names used by the Workbox packages.\n * Cache names are generated as `<prefix>-<Cache Name>-<suffix>`.\n *\n * @param {Object} details\n * @param {Object} [details.prefix] The string to add to the beginning of\n *     the precache and runtime cache names.\n * @param {Object} [details.suffix] The string to add to the end of\n *     the precache and runtime cache names.\n * @param {Object} [details.precache] The cache name to use for precache\n *     caching.\n * @param {Object} [details.runtime] The cache name to use for runtime caching.\n * @param {Object} [details.googleAnalytics] The cache name to use for\n *     `workbox-google-analytics` caching.\n *\n * @memberof workbox-core\n */\nfunction setCacheNameDetails(details) {\n    if (process.env.NODE_ENV !== 'production') {\n        Object.keys(details).forEach((key) => {\n            assert.isType(details[key], 'string', {\n                moduleName: 'workbox-core',\n                funcName: 'setCacheNameDetails',\n                paramName: `details.${key}`,\n            });\n        });\n        if ('precache' in details && details['precache'].length === 0) {\n            throw new WorkboxError('invalid-cache-name', {\n                cacheNameId: 'precache',\n                value: details['precache'],\n            });\n        }\n        if ('runtime' in details && details['runtime'].length === 0) {\n            throw new WorkboxError('invalid-cache-name', {\n                cacheNameId: 'runtime',\n                value: details['runtime'],\n            });\n        }\n        if ('googleAnalytics' in details &&\n            details['googleAnalytics'].length === 0) {\n            throw new WorkboxError('invalid-cache-name', {\n                cacheNameId: 'googleAnalytics',\n                value: details['googleAnalytics'],\n            });\n        }\n    }\n    cacheNames.updateDetails(details);\n}\nexport { setCacheNameDetails };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAT,QAAuB,sBAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,OAAO,eAAP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,mBAAT,CAA6BC,OAA7B,EAAsC;EAClC,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;IACvCC,MAAM,CAACC,IAAP,CAAYL,OAAZ,EAAqBM,OAArB,CAA6B,UAACC,GAAD,EAAS;MAClCX,MAAM,CAACY,MAAP,CAAcR,OAAO,CAACO,GAAD,CAArB,EAA4B,QAA5B,EAAsC;QAClCE,UAAU,EAAE,cADsB;QAElCC,QAAQ,EAAE,qBAFwB;QAGlCC,SAAS,oBAAaJ,GAAb;MAHyB,CAAtC;IAKH,CAND;;IAOA,IAAI,cAAcP,OAAd,IAAyBA,OAAO,CAAC,UAAD,CAAP,CAAoBY,MAApB,KAA+B,CAA5D,EAA+D;MAC3D,MAAM,IAAId,YAAJ,CAAiB,oBAAjB,EAAuC;QACzCe,WAAW,EAAE,UAD4B;QAEzCC,KAAK,EAAEd,OAAO,CAAC,UAAD;MAF2B,CAAvC,CAAN;IAIH;;IACD,IAAI,aAAaA,OAAb,IAAwBA,OAAO,CAAC,SAAD,CAAP,CAAmBY,MAAnB,KAA8B,CAA1D,EAA6D;MACzD,MAAM,IAAId,YAAJ,CAAiB,oBAAjB,EAAuC;QACzCe,WAAW,EAAE,SAD4B;QAEzCC,KAAK,EAAEd,OAAO,CAAC,SAAD;MAF2B,CAAvC,CAAN;IAIH;;IACD,IAAI,qBAAqBA,OAArB,IACAA,OAAO,CAAC,iBAAD,CAAP,CAA2BY,MAA3B,KAAsC,CAD1C,EAC6C;MACzC,MAAM,IAAId,YAAJ,CAAiB,oBAAjB,EAAuC;QACzCe,WAAW,EAAE,iBAD4B;QAEzCC,KAAK,EAAEd,OAAO,CAAC,iBAAD;MAF2B,CAAvC,CAAN;IAIH;EACJ;;EACDH,UAAU,CAACkB,aAAX,CAAyBf,OAAzB;AACH;;AACD,SAASD,mBAAT"},"metadata":{},"sourceType":"module"}