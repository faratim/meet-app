{"ast":null,"code":"/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call {@link workbox-routing.Router#registerRoute}.\n *\n * @param {RegExp|string|workbox-routing.Route~matchCallback|workbox-routing.Route} capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {workbox-routing~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {workbox-routing.Route} The generated `Route`.\n *\n * @memberof workbox-routing\n */\n\nfunction registerRoute(capture, handler, method) {\n  var route;\n\n  if (typeof capture === 'string') {\n    var captureUrl = new URL(capture, location.href);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n        throw new WorkboxError('invalid-string', {\n          moduleName: 'workbox-routing',\n          funcName: 'registerRoute',\n          paramName: 'capture'\n        });\n      } // We want to check if Express-style wildcards are in the pathname only.\n      // TODO: Remove this log message in v4.\n\n\n      var valueToCheck = capture.startsWith('http') ? captureUrl.pathname : capture; // See https://github.com/pillarjs/path-to-regexp#parameters\n\n      var wildcards = '[*:?+]';\n\n      if (new RegExp(\"\".concat(wildcards)).exec(valueToCheck)) {\n        logger.debug(\"The '$capture' parameter contains an Express-style wildcard \" + \"character (\".concat(wildcards, \"). Strings are now always interpreted as \") + \"exact matches; use a RegExp for partial or wildcard matches.\");\n      }\n    }\n\n    var matchCallback = function matchCallback(_ref) {\n      var url = _ref.url;\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (url.pathname === captureUrl.pathname && url.origin !== captureUrl.origin) {\n          logger.debug(\"\".concat(capture, \" only partially matches the cross-origin URL \") + \"\".concat(url.toString(), \". This route will only handle cross-origin requests \") + \"if they match the entire URL.\");\n        }\n      }\n\n      return url.href === captureUrl.href;\n    }; // If `capture` is a string then `handler` and `method` must be present.\n\n\n    route = new Route(matchCallback, handler, method);\n  } else if (capture instanceof RegExp) {\n    // If `capture` is a `RegExp` then `handler` and `method` must be present.\n    route = new RegExpRoute(capture, handler, method);\n  } else if (typeof capture === 'function') {\n    // If `capture` is a function then `handler` and `method` must be present.\n    route = new Route(capture, handler, method);\n  } else if (capture instanceof Route) {\n    route = capture;\n  } else {\n    throw new WorkboxError('unsupported-route-type', {\n      moduleName: 'workbox-routing',\n      funcName: 'registerRoute',\n      paramName: 'capture'\n    });\n  }\n\n  var defaultRouter = getOrCreateDefaultRouter();\n  defaultRouter.registerRoute(route);\n  return route;\n}\n\nexport { registerRoute };","map":{"version":3,"names":["logger","WorkboxError","Route","RegExpRoute","getOrCreateDefaultRouter","registerRoute","capture","handler","method","route","captureUrl","URL","location","href","process","env","NODE_ENV","startsWith","moduleName","funcName","paramName","valueToCheck","pathname","wildcards","RegExp","exec","debug","matchCallback","url","origin","toString","defaultRouter"],"sources":["/Users/faratim/Documents/GitHub/meet-app/meet/node_modules/workbox-routing/registerRoute.js"],"sourcesContent":["/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call {@link workbox-routing.Router#registerRoute}.\n *\n * @param {RegExp|string|workbox-routing.Route~matchCallback|workbox-routing.Route} capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {workbox-routing~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {workbox-routing.Route} The generated `Route`.\n *\n * @memberof workbox-routing\n */\nfunction registerRoute(capture, handler, method) {\n    let route;\n    if (typeof capture === 'string') {\n        const captureUrl = new URL(capture, location.href);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n                throw new WorkboxError('invalid-string', {\n                    moduleName: 'workbox-routing',\n                    funcName: 'registerRoute',\n                    paramName: 'capture',\n                });\n            }\n            // We want to check if Express-style wildcards are in the pathname only.\n            // TODO: Remove this log message in v4.\n            const valueToCheck = capture.startsWith('http')\n                ? captureUrl.pathname\n                : capture;\n            // See https://github.com/pillarjs/path-to-regexp#parameters\n            const wildcards = '[*:?+]';\n            if (new RegExp(`${wildcards}`).exec(valueToCheck)) {\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\n                    `character (${wildcards}). Strings are now always interpreted as ` +\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\n            }\n        }\n        const matchCallback = ({ url }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if (url.pathname === captureUrl.pathname &&\n                    url.origin !== captureUrl.origin) {\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\n                        `${url.toString()}. This route will only handle cross-origin requests ` +\n                        `if they match the entire URL.`);\n                }\n            }\n            return url.href === captureUrl.href;\n        };\n        // If `capture` is a string then `handler` and `method` must be present.\n        route = new Route(matchCallback, handler, method);\n    }\n    else if (capture instanceof RegExp) {\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\n        route = new RegExpRoute(capture, handler, method);\n    }\n    else if (typeof capture === 'function') {\n        // If `capture` is a function then `handler` and `method` must be present.\n        route = new Route(capture, handler, method);\n    }\n    else if (capture instanceof Route) {\n        route = capture;\n    }\n    else {\n        throw new WorkboxError('unsupported-route-type', {\n            moduleName: 'workbox-routing',\n            funcName: 'registerRoute',\n            paramName: 'capture',\n        });\n    }\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.registerRoute(route);\n    return route;\n}\nexport { registerRoute };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}