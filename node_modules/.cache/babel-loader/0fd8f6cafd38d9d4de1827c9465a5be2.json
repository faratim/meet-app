{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/faratim/Documents/GitHub/meet-app/meet/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/faratim/Documents/GitHub/meet-app/meet/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/faratim/Documents/GitHub/meet-app/meet/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/faratim/Documents/GitHub/meet-app/meet/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/faratim/Documents/GitHub/meet-app/meet/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * NavigationRoute makes it easy to create a\n * {@link workbox-routing.Route} that matches for browser\n * [navigation requests]{@link https://developers.google.com/web/fundamentals/primers/service-workers/high-performance-loading#first_what_are_navigation_requests}.\n *\n * It will only match incoming Requests whose\n * {@link https://fetch.spec.whatwg.org/#concept-request-mode|mode}\n * is set to `navigate`.\n *\n * You can optionally only apply this route to a subset of navigation requests\n * by using one or both of the `denylist` and `allowlist` parameters.\n *\n * @memberof workbox-routing\n * @extends workbox-routing.Route\n */\n\nvar NavigationRoute = /*#__PURE__*/function (_Route) {\n  _inherits(NavigationRoute, _Route);\n\n  var _super = _createSuper(NavigationRoute);\n\n  /**\n   * If both `denylist` and `allowlist` are provided, the `denylist` will\n   * take precedence and the request will not match this route.\n   *\n   * The regular expressions in `allowlist` and `denylist`\n   * are matched against the concatenated\n   * [`pathname`]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/pathname}\n   * and [`search`]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/search}\n   * portions of the requested URL.\n   *\n   * *Note*: These RegExps may be evaluated against every destination URL during\n   * a navigation. Avoid using\n   * [complex RegExps](https://github.com/GoogleChrome/workbox/issues/3077),\n   * or else your users may see delays when navigating your site.\n   *\n   * @param {workbox-routing~handlerCallback} handler A callback\n   * function that returns a Promise resulting in a Response.\n   * @param {Object} options\n   * @param {Array<RegExp>} [options.denylist] If any of these patterns match,\n   * the route will not handle the request (even if a allowlist RegExp matches).\n   * @param {Array<RegExp>} [options.allowlist=[/./]] If any of these patterns\n   * match the URL's pathname and search parameter, the route will handle the\n   * request (assuming the denylist doesn't match).\n   */\n  function NavigationRoute(handler) {\n    var _this;\n\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$allowlist = _ref.allowlist,\n        allowlist = _ref$allowlist === void 0 ? [/./] : _ref$allowlist,\n        _ref$denylist = _ref.denylist,\n        denylist = _ref$denylist === void 0 ? [] : _ref$denylist;\n\n    _classCallCheck(this, NavigationRoute);\n\n    if (process.env.NODE_ENV !== 'production') {\n      assert.isArrayOfClass(allowlist, RegExp, {\n        moduleName: 'workbox-routing',\n        className: 'NavigationRoute',\n        funcName: 'constructor',\n        paramName: 'options.allowlist'\n      });\n      assert.isArrayOfClass(denylist, RegExp, {\n        moduleName: 'workbox-routing',\n        className: 'NavigationRoute',\n        funcName: 'constructor',\n        paramName: 'options.denylist'\n      });\n    }\n\n    _this = _super.call(this, function (options) {\n      return _this._match(options);\n    }, handler);\n    _this._allowlist = allowlist;\n    _this._denylist = denylist;\n    return _this;\n  }\n  /**\n   * Routes match handler.\n   *\n   * @param {Object} options\n   * @param {URL} options.url\n   * @param {Request} options.request\n   * @return {boolean}\n   *\n   * @private\n   */\n\n\n  _createClass(NavigationRoute, [{\n    key: \"_match\",\n    value: function _match(_ref2) {\n      var url = _ref2.url,\n          request = _ref2.request;\n\n      if (request && request.mode !== 'navigate') {\n        return false;\n      }\n\n      var pathnameAndSearch = url.pathname + url.search;\n\n      var _iterator = _createForOfIteratorHelper(this._denylist),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var regExp = _step.value;\n\n          if (regExp.test(pathnameAndSearch)) {\n            if (process.env.NODE_ENV !== 'production') {\n              logger.log(\"The navigation route \".concat(pathnameAndSearch, \" is not \") + \"being used, since the URL matches this denylist pattern: \" + \"\".concat(regExp.toString()));\n            }\n\n            return false;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (this._allowlist.some(function (regExp) {\n        return regExp.test(pathnameAndSearch);\n      })) {\n        if (process.env.NODE_ENV !== 'production') {\n          logger.debug(\"The navigation route \".concat(pathnameAndSearch, \" \") + \"is being used.\");\n        }\n\n        return true;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        logger.log(\"The navigation route \".concat(pathnameAndSearch, \" is not \") + \"being used, since the URL being navigated to doesn't \" + \"match the allowlist.\");\n      }\n\n      return false;\n    }\n  }]);\n\n  return NavigationRoute;\n}(Route);\n\nexport { NavigationRoute };","map":{"version":3,"names":["assert","logger","Route","NavigationRoute","handler","allowlist","denylist","process","env","NODE_ENV","isArrayOfClass","RegExp","moduleName","className","funcName","paramName","options","_match","_allowlist","_denylist","url","request","mode","pathnameAndSearch","pathname","search","regExp","test","log","toString","some","debug"],"sources":["/Users/faratim/Documents/GitHub/meet-app/meet/node_modules/workbox-routing/NavigationRoute.js"],"sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * NavigationRoute makes it easy to create a\n * {@link workbox-routing.Route} that matches for browser\n * [navigation requests]{@link https://developers.google.com/web/fundamentals/primers/service-workers/high-performance-loading#first_what_are_navigation_requests}.\n *\n * It will only match incoming Requests whose\n * {@link https://fetch.spec.whatwg.org/#concept-request-mode|mode}\n * is set to `navigate`.\n *\n * You can optionally only apply this route to a subset of navigation requests\n * by using one or both of the `denylist` and `allowlist` parameters.\n *\n * @memberof workbox-routing\n * @extends workbox-routing.Route\n */\nclass NavigationRoute extends Route {\n    /**\n     * If both `denylist` and `allowlist` are provided, the `denylist` will\n     * take precedence and the request will not match this route.\n     *\n     * The regular expressions in `allowlist` and `denylist`\n     * are matched against the concatenated\n     * [`pathname`]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/pathname}\n     * and [`search`]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/search}\n     * portions of the requested URL.\n     *\n     * *Note*: These RegExps may be evaluated against every destination URL during\n     * a navigation. Avoid using\n     * [complex RegExps](https://github.com/GoogleChrome/workbox/issues/3077),\n     * or else your users may see delays when navigating your site.\n     *\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {Object} options\n     * @param {Array<RegExp>} [options.denylist] If any of these patterns match,\n     * the route will not handle the request (even if a allowlist RegExp matches).\n     * @param {Array<RegExp>} [options.allowlist=[/./]] If any of these patterns\n     * match the URL's pathname and search parameter, the route will handle the\n     * request (assuming the denylist doesn't match).\n     */\n    constructor(handler, { allowlist = [/./], denylist = [] } = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArrayOfClass(allowlist, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'NavigationRoute',\n                funcName: 'constructor',\n                paramName: 'options.allowlist',\n            });\n            assert.isArrayOfClass(denylist, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'NavigationRoute',\n                funcName: 'constructor',\n                paramName: 'options.denylist',\n            });\n        }\n        super((options) => this._match(options), handler);\n        this._allowlist = allowlist;\n        this._denylist = denylist;\n    }\n    /**\n     * Routes match handler.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {Request} options.request\n     * @return {boolean}\n     *\n     * @private\n     */\n    _match({ url, request }) {\n        if (request && request.mode !== 'navigate') {\n            return false;\n        }\n        const pathnameAndSearch = url.pathname + url.search;\n        for (const regExp of this._denylist) {\n            if (regExp.test(pathnameAndSearch)) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`The navigation route ${pathnameAndSearch} is not ` +\n                        `being used, since the URL matches this denylist pattern: ` +\n                        `${regExp.toString()}`);\n                }\n                return false;\n            }\n        }\n        if (this._allowlist.some((regExp) => regExp.test(pathnameAndSearch))) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`The navigation route ${pathnameAndSearch} ` + `is being used.`);\n            }\n            return true;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(`The navigation route ${pathnameAndSearch} is not ` +\n                `being used, since the URL being navigated to doesn't ` +\n                `match the allowlist.`);\n        }\n        return false;\n    }\n}\nexport { NavigationRoute };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}